name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pip install pytest-cov  # Asegúrate de que pytest-cov esté instalado
        pytest --cov=./ --cov-report xml --cov-report term

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage.xml

    - name: Install Google Chrome
      run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install ./google-chrome-stable_current_amd64.deb

    - name: Download ChromeDriver
      run: |
          wget https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip


    - name: Set Permissions for ChromeDriver
      run: |
          chmod +x chromedriver
    - name: Start Flask Server
      run: |
            nohup FLASK_APP=your_flask_app.py flask run --host=0.0.0.0 --port=5000 &
    
    - name: Wait for Flask Server to start
      run: sleep 10
      
    - name: List files
      run: |
              ls -l

    - name: Run Test
      if: always()
      run: 
          behave -vv TP-Ahorcado/features
      continue-on-error: true
          
